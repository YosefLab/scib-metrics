[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]


[project]
name = "scib-metrics"
version = "0.4.0"
description = "Accelerated and Python-only scIB metrics"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Adam Gayoso"},
]
maintainers = [
    {name = "Adam Gayoso", email = "adamgayoso@berkeley.edu"},
]
urls.Documentation = "https://scib-metrics.readthedocs.io/"
urls.Source = "https://github.com/yoseflab/scib-metrics"
urls.Home-page = "https://github.com/yoseflab/scib-metrics"
dependencies = [
    "anndata",
    "chex",
    "jax",
    "jaxlib",
    "numpy",
    "pandas",
    "scipy",
    "scikit-learn",
    "scanpy>=1.9",
    "rich",
    "pynndescent",
    "igraph>0.9.0",
    "matplotlib",
    "plottable",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    # CLI for bumping the version number
    "bump2version",
    "pre-commit"
]
doc = [
    "sphinx>=4",
    "sphinx-book-theme>=1.0",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "scanpydoc[typehints]>=0.7.4",
    # For notebooks
    "ipython",
    "ipykernel",
    "sphinx-copybutton",
    "numba>=0.57.1",
]
test = [
    "pytest",
    "pytest-cov",
    "scib>=1.1.4",
    "harmonypy",
    "joblib",
    # For vscode Python extension testing
    "flake8",
    "black",
    "numba>=0.57.1",
]
parallel = [
    "joblib"
]
tutorial = [
    "rich",
    "scanorama",
    "harmony-pytorch",
    "scvi-tools",
    "pyliger",
    "numexpr", # missing liger dependency
    "plotnine", # missing liger dependency
    "mygene", # missing liger dependency
    "goatools", # missing liger dependency
    "adjustText", # missing liger dependency
]

[tool.hatch.build.targets.wheel]
packages = ['src/scib_metrics']

[tool.coverage.run]
source = ["scib_metrics"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true

[tool.ruff]
src = ["src"]
line-length = 120
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
    # Missing argument description in the docstring TODO: enable
    "D417",
    # No explicit stacklevel argument
    "B028",
]

[tool.ruff.per-file-ignores]
"docs/*" = ["I", "BLE001", "E402", "B018"]
"tests/*" = ["D", "B018"]
"*/__init__.py" = ["F401"]
"src/scib_metrics/__init__.py" = ["I"]

[tool.ruff.pydocstyle]
convention = "numpy"


[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.jupytext]
formats = "ipynb,md"

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb"
]
